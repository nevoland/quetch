import type { CACHE } from "../constants/CACHE.js";

import type { FieldFiltered } from "./FieldFiltered";
import type { Value } from "./Value";

/**
 * Checks if a given string field matches a given regular expression, the value being a raw regular expression string.
 */
export type FilterStringMatch<T> = {
  operator: "match" | "notMatch";
  field: FieldFiltered<T, string>;
  /**
   * Regular expression options.
   */
  options?: {
    /**
     * Ignore casing differences if `true`.
     */
    ignoreCase?: boolean;
    /**
     * Allow `.` to match newlines.
     */
    dotAll?: boolean;
  };
  /**
   * Compiled regular expression generated by the `testFilter` function.
   */
  [CACHE]?: RegExp;
} & Value<T, string>;
