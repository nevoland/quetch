import type { Handler } from "../types";

/** @hidden */
function combine<I0, O0, I1, O1, I2, O2>(
  ...handlerList: readonly [Handler<I0, O0, I1, O1>, Handler<I1, O1, I2, O2>]
): Handler<I0, O0, I2, O2>;
/** @hidden */
function combine<I0, O0, I1, O1, I2, O2, I3, O3>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
  ]
): Handler<I0, O0, I3, O3>;
/** @hidden */
function combine<I0, O0, I1, O1, I2, O2, I3, O3, I4, O4>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
  ]
): Handler<I0, O0, I4, O4>;
/** @hidden */
function combine<I0, O0, I1, O1, I2, O2, I3, O3, I4, O4, I5, O5>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
  ]
): Handler<I0, O0, I5, O5>;
/** @hidden */
function combine<I0, O0, I1, O1, I2, O2, I3, O3, I4, O4, I5, O5, I6, O6>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
  ]
): Handler<I0, O0, I6, O6>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
  ]
): Handler<I0, O0, I7, O7>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
  ]
): Handler<I0, O0, I8, O8>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
  ]
): Handler<I0, O0, I9, O9>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
  ]
): Handler<I0, O0, I10, O10>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
    Handler<I10, O10, I11, O11>,
  ]
): Handler<I0, O0, I11, O11>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
    Handler<I10, O10, I11, O11>,
    Handler<I11, O11, I12, O12>,
  ]
): Handler<I0, O0, I12, O12>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
  I13,
  O13,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
    Handler<I10, O10, I11, O11>,
    Handler<I11, O11, I12, O12>,
    Handler<I12, O12, I13, O13>,
  ]
): Handler<I0, O0, I13, O13>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
  I13,
  O13,
  I14,
  O14,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
    Handler<I10, O10, I11, O11>,
    Handler<I11, O11, I12, O12>,
    Handler<I12, O12, I13, O13>,
    Handler<I13, O13, I14, O14>,
  ]
): Handler<I0, O0, I14, O14>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
  I13,
  O13,
  I14,
  O14,
  I15,
  O15,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
    Handler<I10, O10, I11, O11>,
    Handler<I11, O11, I12, O12>,
    Handler<I12, O12, I13, O13>,
    Handler<I13, O13, I14, O14>,
    Handler<I14, O14, I15, O15>,
  ]
): Handler<I0, O0, I15, O15>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
  I13,
  O13,
  I14,
  O14,
  I15,
  O15,
  I16,
  O16,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
    Handler<I10, O10, I11, O11>,
    Handler<I11, O11, I12, O12>,
    Handler<I12, O12, I13, O13>,
    Handler<I13, O13, I14, O14>,
    Handler<I14, O14, I15, O15>,
    Handler<I15, O15, I16, O16>,
  ]
): Handler<I0, O0, I16, O16>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
  I13,
  O13,
  I14,
  O14,
  I15,
  O15,
  I16,
  O16,
  I17,
  O17,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
    Handler<I10, O10, I11, O11>,
    Handler<I11, O11, I12, O12>,
    Handler<I12, O12, I13, O13>,
    Handler<I13, O13, I14, O14>,
    Handler<I14, O14, I15, O15>,
    Handler<I15, O15, I16, O16>,
    Handler<I16, O16, I17, O17>,
  ]
): Handler<I0, O0, I17, O17>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
  I13,
  O13,
  I14,
  O14,
  I15,
  O15,
  I16,
  O16,
  I17,
  O17,
  I18,
  O18,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
    Handler<I10, O10, I11, O11>,
    Handler<I11, O11, I12, O12>,
    Handler<I12, O12, I13, O13>,
    Handler<I13, O13, I14, O14>,
    Handler<I14, O14, I15, O15>,
    Handler<I15, O15, I16, O16>,
    Handler<I16, O16, I17, O17>,
    Handler<I17, O17, I18, O18>,
  ]
): Handler<I0, O0, I18, O18>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
  I13,
  O13,
  I14,
  O14,
  I15,
  O15,
  I16,
  O16,
  I17,
  O17,
  I18,
  O18,
  I19,
  O19,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
    Handler<I10, O10, I11, O11>,
    Handler<I11, O11, I12, O12>,
    Handler<I12, O12, I13, O13>,
    Handler<I13, O13, I14, O14>,
    Handler<I14, O14, I15, O15>,
    Handler<I15, O15, I16, O16>,
    Handler<I16, O16, I17, O17>,
    Handler<I17, O17, I18, O18>,
    Handler<I18, O18, I19, O19>,
  ]
): Handler<I0, O0, I19, O19>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
  I13,
  O13,
  I14,
  O14,
  I15,
  O15,
  I16,
  O16,
  I17,
  O17,
  I18,
  O18,
  I19,
  O19,
  I20,
  O20,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
    Handler<I10, O10, I11, O11>,
    Handler<I11, O11, I12, O12>,
    Handler<I12, O12, I13, O13>,
    Handler<I13, O13, I14, O14>,
    Handler<I14, O14, I15, O15>,
    Handler<I15, O15, I16, O16>,
    Handler<I16, O16, I17, O17>,
    Handler<I17, O17, I18, O18>,
    Handler<I18, O18, I19, O19>,
    Handler<I19, O19, I20, O20>,
  ]
): Handler<I0, O0, I20, O20>;
/** @hidden */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
  I13,
  O13,
  I14,
  O14,
  I15,
  O15,
  I16,
  O16,
  I17,
  O17,
  I18,
  O18,
  I19,
  O19,
  I20,
  O20,
  I21,
  O21,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>,
    Handler<I3, O3, I4, O4>,
    Handler<I4, O4, I5, O5>,
    Handler<I5, O5, I6, O6>,
    Handler<I6, O6, I7, O7>,
    Handler<I7, O7, I8, O8>,
    Handler<I8, O8, I9, O9>,
    Handler<I9, O9, I10, O10>,
    Handler<I10, O10, I11, O11>,
    Handler<I11, O11, I12, O12>,
    Handler<I12, O12, I13, O13>,
    Handler<I13, O13, I14, O14>,
    Handler<I14, O14, I15, O15>,
    Handler<I15, O15, I16, O16>,
    Handler<I16, O16, I17, O17>,
    Handler<I17, O17, I18, O18>,
    Handler<I18, O18, I19, O19>,
    Handler<I19, O19, I20, O20>,
    Handler<I20, O20, I21, O21>,
  ]
): Handler<I0, O0, I21, O21>;
/**
 * Combines the provided handler into a single handler.
 *
 * @param handlerList List of handlers to combine.
 * @returns Handler that combines all provided handlers.
 */
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
  I13,
  O13,
  I14,
  O14,
  I15,
  O15,
  I16,
  O16,
  I17,
  O17,
  I18,
  O18,
  I19,
  O19,
  I20,
  O20,
  I21,
  O21,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>?,
    Handler<I3, O3, I4, O4>?,
    Handler<I4, O4, I5, O5>?,
    Handler<I5, O5, I6, O6>?,
    Handler<I6, O6, I7, O7>?,
    Handler<I7, O7, I8, O8>?,
    Handler<I8, O8, I9, O9>?,
    Handler<I9, O9, I10, O10>?,
    Handler<I10, O10, I11, O11>?,
    Handler<I11, O11, I12, O12>?,
    Handler<I12, O12, I13, O13>?,
    Handler<I13, O13, I14, O14>?,
    Handler<I14, O14, I15, O15>?,
    Handler<I15, O15, I16, O16>?,
    Handler<I16, O16, I17, O17>?,
    Handler<I17, O17, I18, O18>?,
    Handler<I18, O18, I19, O19>?,
    Handler<I19, O19, I20, O20>?,
    Handler<I20, O20, I21, O21>?,
  ]
): Handler<I0, O0, I21, O21>;
function combine<
  I0,
  O0,
  I1,
  O1,
  I2,
  O2,
  I3,
  O3,
  I4,
  O4,
  I5,
  O5,
  I6,
  O6,
  I7,
  O7,
  I8,
  O8,
  I9,
  O9,
  I10,
  O10,
  I11,
  O11,
  I12,
  O12,
  I13,
  O13,
  I14,
  O14,
  I15,
  O15,
  I16,
  O16,
  I17,
  O17,
  I18,
  O18,
  I19,
  O19,
  I20,
  O20,
  I21,
  O21,
>(
  ...handlerList: readonly [
    Handler<I0, O0, I1, O1>,
    Handler<I1, O1, I2, O2>,
    Handler<I2, O2, I3, O3>?,
    Handler<I3, O3, I4, O4>?,
    Handler<I4, O4, I5, O5>?,
    Handler<I5, O5, I6, O6>?,
    Handler<I6, O6, I7, O7>?,
    Handler<I7, O7, I8, O8>?,
    Handler<I8, O8, I9, O9>?,
    Handler<I9, O9, I10, O10>?,
    Handler<I10, O10, I11, O11>?,
    Handler<I11, O11, I12, O12>?,
    Handler<I12, O12, I13, O13>?,
    Handler<I13, O13, I14, O14>?,
    Handler<I14, O14, I15, O15>?,
    Handler<I15, O15, I16, O16>?,
    Handler<I16, O16, I17, O17>?,
    Handler<I17, O17, I18, O18>?,
    Handler<I18, O18, I19, O19>?,
    Handler<I19, O19, I20, O20>?,
    Handler<I20, O20, I21, O21>?,
  ]
): Handler<I0, O0, I21, O21> {
  // eslint-disable-next-line func-names
  return function (input, next) {
    function dispatch(input: any, index: number) {
      const handler = handlerList[index];
      if (!handler) {
        return next(input);
      }
      // eslint-disable-next-line func-names, prefer-arrow-callback
      const result: any = handler(input, function (input) {
        return dispatch(input, index + 1);
      });
      if (result === undefined) {
        throw new Error(`Handler at index ${index} did not return a response`);
      }
      return result;
    }
    return dispatch(input, 0);
  };
}

export { combine };
